[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: {data_path}/comms/klippy_uds

[file_manager]
queue_gcode_uploads: True
enable_object_processing: True

[job_queue]
load_on_startup: True

[data_store]
temperature_store_size: 1800
gcode_store_size: 1000

[database]

[authorization]
cors_domains:
  http://*.local
  http://*.foo.bz
trusted_clients:
  10.0.0.0/8
  127.0.0.0/8
  169.254.0.0/16
  172.16.0.0/12
  192.168.0.0/16
  FE80::/10
  ::1/128

[octoprint_compat]

[history]

[update_manager]
enable_system_updates: False

[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

[machine]
# supervisord is supported but moonraker/klipper is runing as klipper and not root
provider: none
validate_service: False

[secrets]
# empty

# NOTE: something is borked in moonraker implementation
# only FIRST ever message for each notifier will be send
# correctly. Any remaining message is "send", but something
# is not right (and without debug data it's shot in the dark)
[notifier matrix_general]
#url: matrixs://{secrets.matrix.full_url}
url: {secrets.matrix.url}
events: started,complete,error
title: {event_name}
body: {("for '%s'" | format(event_args[1].filename)) if (event_args | length) > 1 else ""}

[notifier print_complete]
#url: matrixs://{secrets.matrix.full_url}
url: {secrets.matrix.url}
events: complete
body: Your printer completed printing '{event_args[1].filename}'


[notifier matrix_notifier]
#url: matrixs://{secrets.matrix.full_url}
url: {secrets.matrix.url}
#events: gcode
events: *
body: {event_message}
